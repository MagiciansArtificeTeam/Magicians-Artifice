package magiciansartifice.main.core.client.entity.boss;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelNetherBoss extends ModelBase {
    //fields
    ModelRenderer rightLeg;
    ModelRenderer leftLeg;
    ModelRenderer bottomBody;
    ModelRenderer topBody;
    ModelRenderer rightArm;
    ModelRenderer leftArm;
    ModelRenderer head;
    ModelRenderer leftBottomHorn;
    ModelRenderer rightBottomHorn;
    ModelRenderer rightTopHorn;
    ModelRenderer leftTopHorn;
    ModelRenderer leftWingSpine;
    ModelRenderer topTail;
    ModelRenderer middleTail;
    ModelRenderer lowMiddleTail;
    ModelRenderer endTail1;
    ModelRenderer endTail2;
    ModelRenderer endTail3;
    ModelRenderer rightWingSpine;
    ModelRenderer leftWing;
    ModelRenderer rightWing;
    ModelRenderer leftWingLowerSpine;
    ModelRenderer rightWingLowerSpine;
    ModelRenderer leftWingLower;
    ModelRenderer rightWingLower;
    ModelRenderer scytheStaff;
    ModelRenderer Shape1;

    public ModelNetherBoss() {
        textureWidth = 128;
        textureHeight = 64;

        rightLeg = new ModelRenderer(this, 96, 26);
        rightLeg.addBox(-4F, 0F, -4F, 8, 30, 8);
        rightLeg.setRotationPoint(-4F, -6F, 0F);
        rightLeg.setTextureSize(128, 64);
        rightLeg.mirror = true;
        setRotation(rightLeg, 0F, 0F, 0F);
        leftLeg = new ModelRenderer(this, 96, 26);
        leftLeg.addBox(-4F, 0F, -4F, 8, 30, 8);
        leftLeg.setRotationPoint(4F, -6F, 0F);
        leftLeg.setTextureSize(128, 64);
        leftLeg.mirror = true;
        setRotation(leftLeg, 0F, 0F, 0F);
        bottomBody = new ModelRenderer(this, 80, 0);
        bottomBody.addBox(-8F, 0F, -4F, 16, 11, 8);
        bottomBody.setRotationPoint(0F, -17F, 0F);
        bottomBody.setTextureSize(128, 64);
        bottomBody.mirror = true;
        setRotation(bottomBody, 0F, 0F, 0F);
        topBody = new ModelRenderer(this, 16, 42);
        topBody.addBox(-8.5F, -7F, -4.5F, 17, 13, 9);
        topBody.setRotationPoint(0F, -23F, 0F);
        topBody.setTextureSize(128, 64);
        topBody.mirror = true;
        setRotation(topBody, 0F, 0F, 0F);
        rightArm = new ModelRenderer(this, 68, 32);
        rightArm.addBox(-6.5F, -3F, -3.5F, 7, 25, 7);
        rightArm.setRotationPoint(-9F, -27F, 0F);
        rightArm.setTextureSize(128, 64);
        rightArm.mirror = true;
        setRotation(rightArm, 0F, 0F, 0F);
        leftArm = new ModelRenderer(this, 68, 32);
        leftArm.addBox(-0.5F, -3F, -3.5F, 7, 25, 7);
        leftArm.setRotationPoint(9F, -27F, 0F);
        leftArm.setTextureSize(128, 64);
        leftArm.mirror = true;
        setRotation(leftArm, 0F, 0F, 0F);
        head = new ModelRenderer(this, 31, 0);
        head.addBox(-6F, -12F, -6F, 12, 12, 12);
        head.setRotationPoint(0F, -30F, 0F);
        head.setTextureSize(128, 64);
        head.mirror = true;
        setRotation(head, 0F, 0F, 0F);
        leftBottomHorn = new ModelRenderer(this, 83, 20);
        leftBottomHorn.addBox(0F, -5F, -1.5F, 3, 7, 3);
        leftBottomHorn.setRotationPoint(5F, -39F, 0F);
        leftBottomHorn.setTextureSize(128, 64);
        leftBottomHorn.mirror = true;
        setRotation(leftBottomHorn, 0F, 0F, 0.6981317F);
        rightBottomHorn = new ModelRenderer(this, 83, 20);
        rightBottomHorn.addBox(-3F, -5F, -1.5F, 3, 7, 3);
        rightBottomHorn.setRotationPoint(-5F, -39F, 0F);
        rightBottomHorn.setTextureSize(128, 64);
        rightBottomHorn.mirror = true;
        setRotation(rightBottomHorn, 0F, 0F, -0.6981317F);
        rightTopHorn = new ModelRenderer(this, 120, 19);
        rightTopHorn.addBox(-1F, -5F, -1F, 2, 5, 2);
        rightTopHorn.setRotationPoint(-8F, -41F, 0F);
        rightTopHorn.setTextureSize(128, 64);
        rightTopHorn.mirror = true;
        setRotation(rightTopHorn, 0F, 0F, 0.4833219F);
        leftTopHorn = new ModelRenderer(this, 120, 19);
        leftTopHorn.addBox(-1F, -5F, -1F, 2, 5, 2);
        leftTopHorn.setRotationPoint(8F, -41F, 0F);
        leftTopHorn.setTextureSize(128, 64);
        leftTopHorn.mirror = true;
        setRotation(leftTopHorn, 0F, 0F, -0.4089647F);
        leftWingSpine = new ModelRenderer(this, 14, 37);
        leftWingSpine.addBox(0F, 0F, 0F, 24, 2, 3);
        leftWingSpine.setRotationPoint(1F, -27F, 4F);
        leftWingSpine.setTextureSize(128, 64);
        leftWingSpine.mirror = true;
        setRotation(leftWingSpine, 0F, -0.3141593F, -0.5934119F);
        topTail = new ModelRenderer(this, 0, 51);
        topTail.addBox(-1.5F, -1.5F, -1.5F, 3, 10, 3);
        topTail.setRotationPoint(0F, -5F, 4F);
        topTail.setTextureSize(128, 64);
        topTail.mirror = true;
        setRotation(topTail, 0.669215F, 0F, 0F);
        middleTail = new ModelRenderer(this, 0, 51);
        middleTail.addBox(-1.5F, -1.5F, -1.5F, 3, 9, 3);
        middleTail.setRotationPoint(0F, 2F, 9F);
        middleTail.setTextureSize(128, 64);
        middleTail.mirror = true;
        setRotation(middleTail, 0.3717861F, 0F, 0F);
        lowMiddleTail = new ModelRenderer(this, 0, 51);
        lowMiddleTail.addBox(-1.5F, 0F, -1.5F, 3, 10, 3);
        lowMiddleTail.setRotationPoint(0F, 8F, 11F);
        lowMiddleTail.setTextureSize(128, 64);
        lowMiddleTail.mirror = true;
        setRotation(lowMiddleTail, -0.1858931F, 0F, 0F);
        endTail1 = new ModelRenderer(this, 0, 51);
        endTail1.addBox(-1.5F, 0F, -1.5F, 3, 7, 3);
        endTail1.setRotationPoint(0F, 16F, 9F);
        endTail1.setTextureSize(128, 64);
        endTail1.mirror = true;
        setRotation(endTail1, 0.6320364F, 0F, 0F);
        endTail2 = new ModelRenderer(this, 0, 51);
        endTail2.addBox(-1.5F, 0F, -1.5F, 3, 7, 3);
        endTail2.setRotationPoint(0F, 21F, 12F);
        endTail2.setTextureSize(128, 64);
        endTail2.mirror = true;
        setRotation(endTail2, 1.821752F, 0F, 0F);
        endTail3 = new ModelRenderer(this, 0, 51);
        endTail3.addBox(-1.5F, 0F, -1.5F, 3, 9, 3);
        endTail3.setRotationPoint(0F, 20F, 17F);
        endTail3.setTextureSize(128, 64);
        endTail3.mirror = true;
        setRotation(endTail3, 2.565324F, 0F, 0F);
        rightWingSpine = new ModelRenderer(this, 14, 37);
        rightWingSpine.addBox(-24F, 0F, 0F, 24, 2, 3);
        rightWingSpine.setRotationPoint(-1F, -27F, 4F);
        rightWingSpine.setTextureSize(128, 64);
        rightWingSpine.mirror = true;
        setRotation(rightWingSpine, 0F, 0.3141593F, 0.5934119F);
        leftWing = new ModelRenderer(this, 20, 28);
        leftWing.addBox(0F, 1F, 0F, 23, 8, 1);
        leftWing.setRotationPoint(1F, -27F, 5F);
        leftWing.setTextureSize(128, 64);
        leftWing.mirror = true;
        setRotation(leftWing, 0F, -0.3141593F, -0.5934119F);
        rightWing = new ModelRenderer(this, 20, 28);
        rightWing.addBox(-23F, 1F, 0F, 23, 8, 1);
        rightWing.setRotationPoint(-1F, -27F, 5F);
        rightWing.setTextureSize(128, 64);
        rightWing.mirror = true;
        setRotation(rightWing, 0F, 0.3141593F, 0.5934119F);
        leftWingLowerSpine = new ModelRenderer(this, 32, 37);
        leftWingLowerSpine.addBox(0F, 0F, 0F, 15, 2, 3);
        leftWingLowerSpine.setRotationPoint(20F, -39F, 10F);
        leftWingLowerSpine.setTextureSize(128, 64);
        leftWingLowerSpine.mirror = true;
        setRotation(leftWingLowerSpine, 0F, -0.3490659F, 0.4363323F);
        rightWingLowerSpine = new ModelRenderer(this, 32, 37);
        rightWingLowerSpine.addBox(-15F, 0F, 0F, 15, 2, 3);
        rightWingLowerSpine.setRotationPoint(-20F, -39F, 10F);
        rightWingLowerSpine.setTextureSize(128, 64);
        rightWingLowerSpine.mirror = true;
        setRotation(rightWingLowerSpine, 0F, 0.3490659F, -0.4363323F);
        leftWingLower = new ModelRenderer(this, 29, 28);
        leftWingLower.addBox(0F, 0F, 0F, 14, 8, 1);
        leftWingLower.setRotationPoint(19F, -39F, 11F);
        leftWingLower.setTextureSize(128, 64);
        leftWingLower.mirror = true;
        setRotation(leftWingLower, 0F, -0.3490659F, 0.4363323F);
        rightWingLower = new ModelRenderer(this, 29, 28);
        rightWingLower.addBox(-14F, 0F, 0F, 14, 8, 1);
        rightWingLower.setRotationPoint(-19F, -39F, 11F);
        rightWingLower.setTextureSize(128, 64);
        rightWingLower.mirror = true;
        setRotation(rightWingLower, 0F, 0.3490659F, -0.4363323F);
        scytheStaff = new ModelRenderer(this, 0, 9);
        scytheStaff.addBox(0F, -17F, 0F, 2, 40, 2);
        scytheStaff.setRotationPoint(-13F, -8F, 0F);
        scytheStaff.setTextureSize(128, 64);
        scytheStaff.mirror = true;
        setRotation(scytheStaff, 1.115358F, 0F, -0.5205006F);
        Shape1 = new ModelRenderer(this, 20, 0);
        Shape1.addBox(0F, 0F, 0F, 2, 15, 3);
        Shape1.setRotationPoint(-17F, -16F, -15F);
        Shape1.setTextureSize(128, 64);
        Shape1.mirror = true;
        setRotation(Shape1, -0.2230717F, 0F, -0.3717861F);
    }

    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        rightLeg.render(f5);
        leftLeg.render(f5);
        bottomBody.render(f5);
        topBody.render(f5);
        rightArm.render(f5);
        leftArm.render(f5);
        head.render(f5);
        leftBottomHorn.render(f5);
        rightBottomHorn.render(f5);
        rightTopHorn.render(f5);
        leftTopHorn.render(f5);
        leftWingSpine.render(f5);
        topTail.render(f5);
        middleTail.render(f5);
        lowMiddleTail.render(f5);
        endTail1.render(f5);
        endTail2.render(f5);
        endTail3.render(f5);
        rightWingSpine.render(f5);
        leftWing.render(f5);
        rightWing.render(f5);
        leftWingLowerSpine.render(f5);
        rightWingLowerSpine.render(f5);
        leftWingLower.render(f5);
        rightWingLower.render(f5);
        scytheStaff.render(f5);
        Shape1.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
        super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        this.head.rotateAngleY = f4 / (180F / (float)Math.PI);
        this.head.rotateAngleX = f5 / (180F / (float)Math.PI);
        this.rightLeg.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
        this.leftLeg.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
        this.leftArm.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;
    }

}

